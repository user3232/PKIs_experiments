[default]                     
                    # names in [default] can be referenced as:
                    #  * $default::dir_to_put_certs
                    #  * $dir_to_put_certs
dir_to_put_certs    = ./ca
signing_cert_file   = ./ca/localhost_ca.pem
signing_priv_key    = ./hack/dev-localhost.core.key 
serial_file         = ./ca/localhost_ca.srl 
database_file       = ./ca/localhost_ca.db 

[ req ]                         
                    # request parameters:
default_md          = sha256
                    # MD to use
utf8                = yes                   
                    # Input is UTF-8
string_mask         = utf8only              
                    # Emit UTF-8 strings
prompt              = no                    
                    # Don't prompt for DN
distinguished_name  = dn                    
                    # DN section
req_extensions      = req_ext            
                    # request extensions section

[ dn ]                        
commonName          = localhost

[ req_ext ]
basicConstraints      = critical,CA:true
                      # this should be CA certificate
keyUsage              = critical,keyCertSign
                      # required cert can be used for: 
                      #  * signing certificates
# certificatePolicies   = 1.3.6.1.4.1.311.84.1.1
                      # Policies is agreement that cert have something.
                      # To be consistent all certs in chain (except root)
                      # must have it.
                      # 1.3.6.1.4.1.311.84.1.1 policy is checked by Kestrel 
                      # server to accept certificate as its own certificate
1.3.6.1.4.1.311.84.1.1 = DER:01
subjectKeyIdentifier  = hash
                      # RFC5280 compilant CA cert must have this


[ ca ]                      
                # this certificate certification parameters:
default_ca      = cert_issuing_parameters               
                # section pointer for 'openssl ca ...'
                # configuration, it can be specified
                # in [default] or [ca] or using
                # 'openssl ca -name root_ca

[ cert_issuing_parameters ]     
                # https://www.openssl.org/docs/man1.1.1/man1/ca.html
new_certs_dir   = $dir_to_put_certs
                # MANDATORY 
                # where signed certs will be
certificate     = $signing_cert_file
                # MANDATORY 
                # (it does not exist for -selfsign)
                # CA certificate used for signing CSRs
private_key     = $signing_priv_key
                # MANDATORY
                # private key of this CA
serial          = $serial_file
                # MANDATORY
                # file containing serial number
database        = $database_file
                # MANDATORY
                # The text database file to use.
                # initially it will be empty
policy          = any_pol
                # MANDATORY
                # pointer to section
                # The policy section consists of a set of variables 
                # corresponding to certificate DN fields.
                #  * Any fields not mentioned in the policy section 
                #    are silently deleted
                #  * policy DN filds can have values:
                #    * match - the field value must match the same 
                #      field in the CA certificate, 
                #      (=> this:DN:component = request:DN:component)
                #      for this CA cert for egzample :
                #        if 
                #          this:commonName = match 
                #        then 
                #          request:commonName = localhost
                #    * supplied (=> request:DN:component = something)
                #    * optional (=> request:DN:component = [something])
default_md      = sha256
                # MANDATORY (but probably taken from req if not present)
                # digest algorithm selector for cert digest


default_startdate = 20200714001526Z
                # ( 2020 01 01 01 00 00 Z(=>GMT) )
                # format: YYYYMMDDHHMMSSZ
                # seconds SS and timezone Z must be present
default_enddate  = 20210714001526Z
                # MUST exist if default_days not exist
# default_days    = 365
                # MUST exist if default_enddate not exist
                # (about 1 year)
                # The number of days to certify a certificate for.
copy_extensions = copy
                # Copy extensions from CSR?
                #  * none - If set to none or this option is not present then 
                #    extensions are ignored and not copied to the certificate.
                #  * copy - any extensions present in the request that are not
                #    already present are copied to the certificate.
                #  * copyall - all extensions in the request are copied to the
                #    certificate: if the extension is already present in the 
                #    certificate it is deleted first.
x509_extensions = signed_certs_extensions
                # for signing typically specialised configuration 
                # would be used

unique_subject  = no
                # do valid certificate entries in the database 
                # must have unique subjects?
                # (usefull for roll-over of -selfsign certs)
email_in_dn     = no
                # allow for the EMAIL filed in the certificate's DN?
                # RFC5280 recomends no
preserve        = no                    
                # should keep passed DN ordering?
name_opt        = ca_default
                # ca_default is default value for printing
                # Subject DN display options
cert_opt        = no_header,no_version,no_serial,no_signame,no_validity,no_subject,no_issuer,no_pubkey,no_sigdump,no_aux,no_extensions
                # Certificate display options
                # ca_default is default value for printing

[ any_pol ]
                        # Naming policies control which parts of  
                        # a DN end up in the certificate and
                        # under what circumstances certification 
                        # should be denied.
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

[ signed_certs_extensions ]
                        # Certificate extensions define what types 
                        # of certificates the CA is able to create.
                        # This config is used for selfsign so only those:
basicConstraints        = critical,CA:false
# certificatePolicies     = 1.3.6.1.4.1.311.84.1.1
                        # Policies is agreement that cert have something.
                        # To be consistent all certs in chain (except root)
                        # must have it.
                        # 1.3.6.1.4.1.311.84.1.1 policy is checked by Kestrel 
                        # server to accept certificate as its own certificate
# 1.3.6.1.4.1.311.84.1.1 = ASN1:UTF8String:.